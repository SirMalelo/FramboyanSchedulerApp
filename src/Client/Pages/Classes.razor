
@* Displays a list of upcoming classes and handles check-in *@
@page "/classes"
@using Client.Models
@using Client.Services
@using Microsoft.AspNetCore.Components
@using Client.Pages
@using System.Net.Http.Json
@inject AuthenticatedHttpClient Http


<h1>Upcoming Classes</h1>


@* Show loading, empty, or list of classes *@
@if (classes == null)
{
  <p>Loading classes...</p>
}
else if (classes.Count == 0)
{
  <p>No upcoming classes.</p>
}
else
{
  @foreach (var classItem in classes)
  {
    <ClassCard
      ClassData="classItem"
      UserId="currentUserId"
      OnCheckIn="HandleClassCheckedIn" />
  }
}


@code {
  private List<ClassModel> classes = new();
  private string currentUserId = "user-123"; // TODO: Replace with real user logic

  // Loads classes from the API when the page initializes
  protected override async Task OnInitializedAsync()
  {
    classes = (await Http.GetFromJsonAsync<List<ClassModel>>("api/classes")) 
              ?? new List<ClassModel>();
  }

  // Removes a class from the list after a successful check-in
  private void HandleClassCheckedIn(int classId)
  {
    var item = classes.FirstOrDefault(c => c.Id == classId);
    if (item != null)
    {
      classes.Remove(item);
      StateHasChanged();
    }
  }
}
                    